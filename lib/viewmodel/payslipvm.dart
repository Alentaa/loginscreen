import 'package:flutter/material.dart';
import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart' as pw;
import 'package:printing/printing.dart';

class PayslipViewModel extends ChangeNotifier {
  final String name;
  final String designation;
  final String employeeId;
  final String joiningDate;
  final String payPeriod;
  final String payDate;
  final String netPay;
  final String pfAccountNumber;
  final String uanNumber;
  final List<Map<String, String>> earnings;
  final List<Map<String, String>> deductions;

  PayslipViewModel({
    required this.name,
    required this.designation,
    required this.employeeId,
    required this.joiningDate,
    required this.payPeriod,
    required this.payDate,
    required this.netPay,
    required this.pfAccountNumber,
    required this.uanNumber,
    required this.earnings,
    required this.deductions,
  });

  void generateAndDownloadPDF() async {
    final pdf = pw.Document();

    pdf.addPage(
      pw.Page(
        pageFormat: PdfPageFormat.a4,
        margin: const pw.EdgeInsets.all(24),
        build: (pw.Context context) {
          return pw.Column(
            crossAxisAlignment: pw.CrossAxisAlignment.start,
            children: [
              pw.Text("ZiyaAcademy",
                  style: pw.TextStyle(
                      fontSize: 24,
                      fontWeight: pw.FontWeight.bold,
                      color: PdfColors.blue)),
              pw.Text("KEY-TO SUCCESS",
                  style: pw.TextStyle(fontSize: 12, color: PdfColors.green)),
              pw.SizedBox(height: 16),
              pw.Text("Payslip for the Month",
                  style: const pw.TextStyle(fontSize: 12)),
              pw.Text(payPeriod,
                  style: pw.TextStyle(
                      fontSize: 14, fontWeight: pw.FontWeight.bold)),
              pw.SizedBox(height: 20),

              // Employee Summary
              pw.Text("EMPLOYEE SUMMARY",
                  style: pw.TextStyle(fontWeight: pw.FontWeight.bold)),
              pw.SizedBox(height: 8),
              pw.Text("Employee Name: $name"),
              pw.Text("Designation: $designation"),
              pw.Text("Employee ID: $employeeId"),
              pw.Text("Date of Joining: $joiningDate"),
              pw.Text("Pay Period: $payPeriod"),
              pw.Text("Pay Date: $payDate"),
              pw.SizedBox(height: 8),
              pw.Text("PF A/C Number: $pfAccountNumber"),
              pw.Text("UAN: $uanNumber"),
              pw.SizedBox(height: 20),

              // Table Header
              pw.Table(
                border: pw.TableBorder.all(color: PdfColors.grey),
                children: [
                  pw.TableRow(
                    decoration: const pw.BoxDecoration(color: PdfColors.grey300),
                    children: [
                      _cell("EARNINGS", bold: true),
                      _cell("AMOUNT"),
                      _cell("YTD"),
                      _cell("DEDUCTIONS", bold: true),
                      _cell("AMOUNT"),
                      _cell("YTD"),
                    ],
                  ),
                  // Max 4 rows
                  for (int i = 0; i < 4; i++)
                    pw.TableRow(children: [
                      _cell(i < earnings.length ? earnings[i]["title"]! : ""),
                      _cell(i < earnings.length ? earnings[i]["amount"]! : ""),
                      _cell(i < earnings.length ? earnings[i]["ytd"]! : ""),
                      _cell(i < deductions.length ? deductions[i]["title"]! : ""),
                      _cell(i < deductions.length ? deductions[i]["amount"]! : ""),
                      _cell(i < deductions.length ? deductions[i]["ytd"]! : ""),
                    ]),
                ],
              ),
              pw.SizedBox(height: 12),
              pw.Container(
                color: PdfColors.blue50,
                padding: const pw.EdgeInsets.symmetric(vertical: 6, horizontal: 12),
                child: pw.Row(
                  mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
                  children: [
                    pw.Text("Gross Earnings: ₹ 55,000",
                        style: pw.TextStyle(fontWeight: pw.FontWeight.bold)),
                    pw.Text("Total Deductions: ₹ 10,000",
                        style: pw.TextStyle(fontWeight: pw.FontWeight.bold)),
                  ],
                ),
              ),
              pw.Spacer(),
              pw.Center(
                child: pw.Text(
                  "- This document has been automatically generated by ZiyaAcademy -",
                  style: pw.TextStyle(fontSize: 10, color: PdfColors.grey),
                ),
              )
            ],
          );
        },
      ),
    );

    await Printing.layoutPdf(onLayout: (format) async => pdf.save());
  }

  pw.Widget _cell(String text, {bool bold = false}) {
    return pw.Padding(
      padding: const pw.EdgeInsets.all(4),
      child: pw.Text(
        text,
        style: pw.TextStyle(
          fontWeight: bold ? pw.FontWeight.bold : pw.FontWeight.normal,
        ),
      ),
    );
  }
}
